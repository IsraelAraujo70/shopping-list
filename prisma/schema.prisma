generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model List {
  id        String      @id @default(cuid())
  name      String
  userId    String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  familyId  String?
  items     Item[]
  family    Family?     @relation(fields: [familyId], references: [id])
  shares    ListShare[]
}

model Item {
  id             String   @id @default(cuid())
  name           String
  estimatedPrice Float?
  listId         String
  completed      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  quantity       Int      @default(1)
  list           List     @relation(fields: [listId], references: [id], onDelete: Cascade)
}

model Family {
  id        String         @id @default(cuid())
  name      String
  ownerId   String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  members   FamilyMember[]
  lists     List[]
}

model FamilyMember {
  id        String   @id @default(cuid())
  userId    String
  familyId  String
  role      String   @default("member")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  family    Family   @relation(fields: [familyId], references: [id], onDelete: Cascade)

  @@unique([userId, familyId])
}

model ListShare {
  id        String   @id @default(cuid())
  listId    String
  userId    String
  canEdit   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  list      List     @relation(fields: [listId], references: [id], onDelete: Cascade)

  @@unique([listId, userId])
}
